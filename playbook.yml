---
- name: Instal Grafana
  hosts: all
  become: yes  # This is required to gain sudo privileges

  vars_files:
    - vars.yml
    - vault/api_key.yml

  handlers:
    - name: reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: restart grafana
      ansible.builtin.systemd:
        name: grafana-server
        state: restarted
        enabled: true  # This ensures the service is enabled to start at boot    

  tasks:
    - name: Download Grafana GPG key
      ansible.builtin.get_url:
        url: https://rpm.grafana.com/gpg.key
        dest: /tmp/gpg.key
        mode: '0644'

    - name: Import GPG key
      ansible.builtin.rpm_key:
        state: present
        key: /tmp/gpg.key
      notify: reload systemd

    - name: Copy Grafana repo file
      ansible.builtin.copy:
        src: grafana.repo # Update this path to where you stored the file
        dest: /etc/yum.repos.d/grafana.repo
        mode: '0644'

    - name: Install Grafana Enterprise
      ansible.builtin.dnf:
        name: grafana-enterprise
        state: present
      notify: restart grafana

    - name: Ensure Grafana is started and enabled
      ansible.builtin.systemd:
        name: grafana-server
        state: started
        enabled: yes

    - name: Ensure firewalld is stopped (since this is a test server).
      service: name=firewalld state=stopped

    - name: Download Prometheus
      ansible.builtin.unarchive:
        src: "{{ prometheus_url }}"
        dest: "{{ dest_dir }}"
        creates: "{{ dest_dir }}/prometheus/"
        remote_src: true

    - name: Find Prometheus directory
      ansible.builtin.find:
        paths: "{{ dest_dir }}"
        patterns: 'prometheus-*'
        file_type: directory
      register: prometheus_dir


    - name: Append job configuration to Prometheus
      ansible.builtin.blockinfile:
        path: "{{ prometheus_dir.files[0].path }}/prometheus.yml"
        block: |
          - job_name: 'uptime'
            scrape_interval: 30s
            scheme: http
            static_configs:
              - targets: ['uptime.example.com']
            basic_auth: 
              password: "{{ kuma_api_key }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - UPTIME JOB"
        create: no