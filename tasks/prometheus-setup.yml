---
- name: Install Prometheus
  hosts: all
  become: true

  vars_files:
    - "../vars/vars.yml"
    - "../vault/api_key.yml"

  handlers:
    - name: reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

  pre_tasks:
    - name: Create Prometheus group
      ansible.builtin.group:
        name: prometheus
        state: present

    - name: Create Prometheus user
      ansible.builtin.user:
        name: prometheus
        group: prometheus
        system: yes
        create_home: no
        shell: /sbin/nologin
        state: present

    - name: Create required directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

  tasks: 
  - name: Download Prometheus
    ansible.builtin.get_url:
      url: "{{ prometheus_url }}"
      dest: "/tmp/prometheus.tar.gz"
    when: ansible_architecture == "x86_64"

  - name: Download Prometheus arm64
    ansible.builtin.get_url:
      url: "{{ prometheus_url_arm64 }}"
      dest: "/tmp/prometheus.tar.gz"
    when: ansible_architecture == "aarch64"

  - name: Unarchive Prometheus
    ansible.builtin.unarchive:
      src: "/tmp/prometheus.tar.gz"
      dest: "/tmp/"
      remote_src: yes

  - name: Remove the existing prometheus-files directory if it exists
    ansible.builtin.file:
      path: /tmp/prometheus-files
      state: absent

  - name: Rename unarchived direrectory
    ansible.builtin.command:
      cmd: "mv /tmp/prometheus-2.45.4.linux-amd64 /tmp/prometheus-files"    
    when: ansible_architecture == "x86_64"

  - name: Rename unarchived direrectory
    ansible.builtin.command:
      cmd: "mv /tmp/prometheus-2.45.4.linux-arm64 /tmp/prometheus-files"    
    when: ansible_architecture == "aarch64"

  - name: Copy prometheus binary 
    ansible.builtin.copy:
      src: "/tmp/prometheus-files/prometheus"
      dest: "/usr/local/bin/prometheus"
      remote_src: yes
      mode: '0755'

  - name: Copy promtool binary
    ansible.builtin.copy:
      src: "/tmp/prometheus-files/promtool"
      dest: "/usr/local/bin/promtool"
      remote_src: yes
      mode: '0755'

  - name: Set ownership of prometheus binary
    ansible.builtin.file:
      path: "/usr/local/bin/prometheus"
      owner: prometheus
      group: prometheus
      mode: '0755'

  - name: Set ownership of promtool binary
    ansible.builtin.file:
      path: "/usr/local/bin/promtool"
      owner: prometheus
      group: prometheus
      mode: '0755'

  - name: Copy consoles directory to /etc/prometheus
    ansible.builtin.copy:
      src: "/tmp/prometheus-files/consoles"
      dest: "/etc/prometheus/consoles"
      remote_src: yes
      owner: prometheus
      group: prometheus
      mode: '0755'
    
  - name: Copy console_libraries to /etc/prometheus
    ansible.builtin.copy:
      src: "/tmp/prometheus-files/console_libraries"
      dest: "/etc/prometheus/console_libraries"
      remote_src: yes
      owner: prometheus
      group: prometheus
      mode: '0755'

  - name: Copy Prometheus configuration template
    ansible.builtin.template:
     src: "../templates/prometheus.yml.j2"
     dest: "/etc/prometheus/prometheus.yml"
     owner: prometheus
     group: prometheus
     force: yes

  - name: Create Prometheus systemd service file
    ansible.builtin.copy:
      src: "../files/prometheus.service"
      dest: /etc/systemd/system/prometheus.service
      owner: prometheus 
      group: prometheus
      mode: 0755
    notify: reload systemd     

  - name: Start Prometheus service
    ansible.builtin.systemd:
      name: prometheus.service
      state: started
      enabled: yes
